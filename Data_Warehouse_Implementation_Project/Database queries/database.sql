SHOW STAGES;

LIST @~;
LIST @CARS_DATASET.PUBLIC.CAR_FEATURES_AND_PRICES;
LIST @CARS_DATASET.PUBLIC.CAR_SALES;
LIST @CARS_DATASET.PUBLIC.SAFER_CARS_RATING;
LIST @CARS_DATASET.PUBLIC.USED_CAR_PRICES;

SHOW TABLES IN CARS_DATASET.PUBLIC;

COPY INTO CAR_FEATURES_AND_PRICES
FROM @CARS_DATASET.CAR_FEATURES_AND_PRICES
FILE_FORMAT = (TYPE = 'CSV', FIELD_OPTIONALLY_ENCLOSED_BY = '"n', SKIP_HEADER = 1);

SELECT * FROM CAR_FEATURES_AND_PRICES LIMIT 10;


SHOW TABLES IN SCHEMA CARS_DATASET.PUBLIC;

SHOW GRANTS ON TABLE CARS_DATASET.PUBLIC.CAR_FEATURES_AND_PRICES;

DESC TABLE CARS_DATASET.PUBLIC.CAR_FEATURES_AND_PRICES;

DESC TABLE CARS_DATASET.PUBLIC.CAR_FEATURES_FACT;

DESC TABLE CARS_DATASET.PUBLIC.CAR_MAKE_DIMENSION;

DESC TABLE CARS_DATASET.PUBLIC.CAR_MODEL_DIMENSION;

DESC TABLE CARS_DATASET.PUBLIC.CAR_SALES;

DESC TABLE CARS_DATASET.PUBLIC.CAR_SALES_FACT;

DESC TABLE CARS_DATASET.PUBLIC.ENGINE_DIMENSION;

DESC TABLE CARS_DATASET.PUBLIC.FUEL_DIMENSION;

DESC TABLE CARS_DATASET.PUBLIC.MARKET_CATEGORY_DIMENSION;

DESC TABLE CARS_DATASET.PUBLIC.SAFER_CARS_FACT;

DESC TABLE CARS_DATASET.PUBLIC.SAFER_CARS_RATING;

DESC TABLE CARS_DATASET.PUBLIC.SAFETY_RATING_DIMENSION;

DESC TABLE CARS_DATASET.PUBLIC.TRANSMISSION_DIMENSION;

DESC TABLE CARS_DATASET.PUBLIC.USED_CAR_PRICES;

DESC TABLE CARS_DATASET.PUBLIC.USED_CAR_PRICES_FACT;

DESC TABLE CARS_DATASET.PUBLIC.VEHICLE_DIMENSION;

DESC TABLE CARS_DATASET.PUBLIC.VEHICLE_SAFETY_FACT;








CREATE TABLE CAR_MAKE_DIMENSION (
    MAKE_ID INT AUTOINCREMENT PRIMARY KEY,
    MAKE VARCHAR(255) UNIQUE NOT NULL
);

--- Populating data
INSERT INTO CAR_MAKE_DIMENSION (MAKE)
SELECT DISTINCT MAKE FROM CAR_FEATURES_AND_PRICES
UNION
SELECT DISTINCT MAKE FROM CAR_SALES
UNION
SELECT DISTINCT MAKE FROM USED_CAR_PRICES
UNION
SELECT DISTINCT MAKE FROM SAFER_CARS_RATING;

SELECT MAKE FROM CAR_MAKE_DIMENSION;

CREATE TABLE CAR_MODEL_DIMENSION (
    MODEL_ID INT AUTOINCREMENT PRIMARY KEY,
    MODEL VARCHAR(255) UNIQUE NOT NULL
);
--- Populating data
INSERT INTO CAR_MODEL_DIMENSION (MODEL)
SELECT DISTINCT MODEL FROM CAR_FEATURES_AND_PRICES
UNION
SELECT DISTINCT MODEL FROM CAR_SALES
UNION
SELECT DISTINCT MODEL FROM USED_CAR_PRICES
UNION
SELECT DISTINCT MODEL FROM SAFER_CARS_RATING;

SELECT MODEL FROM CAR_MODEL_DIMENSION;

CREATE TABLE ENGINE_DIMENSION (
    ENGINE_ID INT AUTOINCREMENT PRIMARY KEY,
    ENGINE_FUEL_TYPE VARCHAR(255),
    ENGINE_HP INT,
    ENGINE_CYLINDERS INT
);
--- Populating data
INSERT INTO ENGINE_DIMENSION (ENGINE_FUEL_TYPE, ENGINE_HP, ENGINE_CYLINDERS) 
SELECT DISTINCT 
    ENGINEFUELTYPE, 
    COALESCE(TRY_CAST(ENGINEHP AS NUMBER), 0), 
    COALESCE(TRY_CAST(ENGINECYLINDERS AS NUMBER), 0) 
FROM CAR_FEATURES_AND_PRICES;

SELECT * FROM ENGINE_DIMENSION;

CREATE TABLE TRANSMISSION_DIMENSION (
    TRANSMISSION_ID INT AUTOINCREMENT PRIMARY KEY,
    TRANSMISSION_TYPE VARCHAR(255)
);
--- Populating data
INSERT INTO TRANSMISSION_DIMENSION (TRANSMISSION_TYPE) 
SELECT DISTINCT TRANSMISSIONTYPE FROM CAR_FEATURES_AND_PRICES;

SELECT * FROM TRANSMISSION_DIMENSION;

CREATE TABLE VEHICLE_DIMENSION (
    VEHICLE_ID INT AUTOINCREMENT PRIMARY KEY,
    DRIVEN_WHEELS VARCHAR(255),
    NUMBER_OF_DOORS INT,
    MARKET_CATEGORY VARCHAR(255),
    VEHICLE_SIZE VARCHAR(255),
    VEHICLE_STYLE VARCHAR(255)
);

--- Populating data
INSERT INTO VEHICLE_DIMENSION (DRIVEN_WHEELS, NUMBER_OF_DOORS, MARKET_CATEGORY, VEHICLE_SIZE, VEHICLE_STYLE) 
SELECT DISTINCT DRIVENWHEELS, NUMBEROFDOORS, MARKETCATEGORY, VEHICLESIZE, VEHICLESTYLE FROM CAR_FEATURES_AND_PRICES;

SELECT * FROM VEHICLE_DIMENSION;

CREATE TABLE SAFETY_RATING_DIMENSION (
    SAFETY_ID INT AUTOINCREMENT PRIMARY KEY,
    OVERALL_STARS INT,
    FRONT_TEST_NO VARCHAR(255),
    FRONT_DRIVER_STARS INT,
    FRONT_PASSENGER_STARS INT,
    SIDE_DRIVER_STARS INT,
    SIDE_PASSENGER_STARS INT,
    SIDE_BARRIER_STARS INT,
    ROLLOVER_STARS INT,
    BACKUP_CAMERA VARCHAR(255)
);

--- Populating data
INSERT INTO SAFETY_RATING_DIMENSION (
    OVERALL_STARS, FRONT_TEST_NO, FRONT_DRIVER_STARS, FRONT_PASSENGER_STARS, 
    SIDE_DRIVER_STARS, SIDE_PASSENGER_STARS, SIDE_BARRIER_STARS, 
    ROLLOVER_STARS, BACKUP_CAMERA
) 
SELECT DISTINCT 
    COALESCE(TRY_CAST(OVERALLSTARS AS NUMBER), 0),
    COALESCE(FRNTTESTNO, 'Unknown'),
    COALESCE(TRY_CAST(FRNTDRIVSTARS AS NUMBER), 0),
    COALESCE(TRY_CAST(FRNTPASSSTARS AS NUMBER), 0),
    COALESCE(TRY_CAST(SIDEDRIVSTARS AS NUMBER), 0),
    COALESCE(TRY_CAST(SIDEPASSSTARS AS NUMBER), 0),
    COALESCE(TRY_CAST(SIDEBARRIERSTARS AS NUMBER), 0),
    COALESCE(TRY_CAST(ROLLOVERSTARS AS NUMBER), 0),
    COALESCE(BACKUPCAMERA, 'Unknown')
FROM SAFER_CARS_RATING;

SELECT * FROM SAFETY_RATING_DIMENSION LIMIT 10;

CREATE TABLE MARKET_CATEGORY_DIMENSION (
    MARKET_CATEGORY_ID NUMBER(38,0) PRIMARY KEY AUTOINCREMENT,
    CATEGORY_NAME VARCHAR(255) UNIQUE NOT NULL
);

--- Populating data
INSERT INTO MARKET_CATEGORY_DIMENSION (CATEGORY_NAME)
SELECT DISTINCT TRIM(value)
FROM CAR_FEATURES_AND_PRICES, LATERAL FLATTEN(input => SPLIT(MARKETCATEGORY, ','));

SELECT * FROM MARKET_CATEGORY_DIMENSION;


CREATE TABLE FUEL_DIMENSION (
    FUEL_ID NUMBER(38,0) PRIMARY KEY AUTOINCREMENT,
    FUEL_TYPE VARCHAR(255) UNIQUE NOT NULL
);

--- Populating data
INSERT INTO FUEL_DIMENSION (FUEL_TYPE)
SELECT DISTINCT FUELTYPE FROM USED_CAR_PRICES
UNION
SELECT DISTINCT ENGINEFUELTYPE FROM CAR_FEATURES_AND_PRICES;

SELECT * FROM FUEL_DIMENSION;

CREATE TABLE CAR_FEATURES_FACT (
    CAR_ID INT AUTOINCREMENT PRIMARY KEY,
    MAKE_ID INT,
    MODEL_ID INT,
    YEAR INT,
    ENGINE_ID INT,
    TRANSMISSION_ID INT,
    VEHICLE_ID INT,
    HIGHWAY_MPG INT,
    CITY_MPG INT,
    POPULARITY INT,
    MSRP DECIMAL(10,2),
    CONSTRAINT FK_CAR_MAKE FOREIGN KEY (MAKE_ID) REFERENCES CAR_MAKE_DIMENSION(MAKE_ID),
    CONSTRAINT FK_CAR_MODEL FOREIGN KEY (MODEL_ID) REFERENCES CAR_MODEL_DIMENSION(MODEL_ID),
    CONSTRAINT FK_ENGINE FOREIGN KEY (ENGINE_ID) REFERENCES ENGINE_DIMENSION(ENGINE_ID),
    CONSTRAINT FK_TRANSMISSION FOREIGN KEY (TRANSMISSION_ID) REFERENCES TRANSMISSION_DIMENSION(TRANSMISSION_ID),
    CONSTRAINT FK_VEHICLE FOREIGN KEY (VEHICLE_ID) REFERENCES VEHICLE_DIMENSION(VEHICLE_ID)
);

SELECT * 
FROM CAR_FEATURES_AND_PRICES
;

DESC TABLE CARS_DATASET.PUBLIC.CAR_FEATURES_AND_PRICES;

ALTER TABLE CAR_FEATURES_AND_PRICES DROP COLUMN NUMBEROFDOORS;
ALTER TABLE CAR_FEATURES_AND_PRICES DROP COLUMN DRIVENWHEELS;
ALTER TABLE CAR_FEATURES_AND_PRICES DROP COLUMN ENGINEFUELTYPE;
ALTER TABLE CAR_FEATURES_AND_PRICES DROP COLUMN ENGINECYLINDERS;
ALTER TABLE CAR_FEATURES_AND_PRICES DROP COLUMN TRANSMISSIONTYPE;

--- Populating data
INSERT INTO CAR_FEATURES_FACT (
    MAKE_ID, 
    MODEL_ID, 
    YEAR, 
    ENGINE_ID, 
    VEHICLE_ID, 
    HIGHWAY_MPG, 
    CITY_MPG, 
    POPULARITY, 
    MSRP
)
SELECT 
    m.MAKE_ID, 
    mo.MODEL_ID, 
    cf.YEAR, 
    e.ENGINE_ID,  
    v.VEHICLE_ID, 
    cf.HIGHWAYMPG, 
    cf.CITYMPG, 
    cf.POPULARITY, 
    cf.MSRP
FROM 
    CAR_FEATURES_AND_PRICES cf
JOIN 
    CAR_MAKE_DIMENSION m ON cf.MAKE = m.MAKE
JOIN 
    CAR_MODEL_DIMENSION mo ON cf.MODEL = mo.MODEL
LEFT JOIN 
    ENGINE_DIMENSION e ON cf.ENGINEHP = e.ENGINE_HP
LEFT JOIN
    VEHICLE_DIMENSION v ON cf.VEHICLESIZE = v.VEHICLE_SIZE 
                          AND cf.VEHICLESTYLE = v.VEHICLE_STYLE;

                          
CREATE TABLE CAR_SALES_FACT (
    SALES_ID INT AUTOINCREMENT PRIMARY KEY,
    MAKE_ID INT,
    MODEL_ID INT,
    SALES_IN_THOUSANDS DECIMAL(10,2),
    YEARRESALEVALUE NUMBER(38,2),
    PRICE_IN_THOUSANDS DECIMAL(10,2),
    ENGINE_SIZE DECIMAL(10,2),
    HORSEPOWER INT,
    FUEL_CAPACITY DECIMAL(10,2),
    FUEL_EFFICIENCY DECIMAL(10,2),
    LATEST_LAUNCH DATE,
    POWER_PERFORMANCE_FACTOR VARCHAR(255),
    CONSTRAINT FK_CAR_MAKE FOREIGN KEY (MAKE_ID) REFERENCES CAR_MAKE_DIMENSION(MAKE_ID),
    CONSTRAINT FK_CAR_MODEL FOREIGN KEY (MODEL_ID) REFERENCES CAR_MODEL_DIMENSION(MODEL_ID)
);

--- Populating data
INSERT INTO CAR_SALES_FACT (MAKE_ID, MODEL_ID, SALES_IN_THOUSANDS, YEARRESALEVALUE, PRICE_IN_THOUSANDS, HORSEPOWER, FUEL_CAPACITY, FUEL_EFFICIENCY, LATEST_LAUNCH, POWER_PERFORMANCE_FACTOR)
SELECT 
    m.MAKE_ID, 
    mo.MODEL_ID, 
    cs.SALESINTHOUSANDS, 
    cs.YEARRESALEVALUE, 
    cs.PRICEINTHOUSANDS,
    cs.HORSEPOWER, 
    cs.FUELCAPACITY, 
    cs.FUELEFFICIENCY, 
    cs.LATESTLAUNCH, 
    cs.POWERPERFORMANCEFACTOR
FROM CAR_SALES cs
JOIN CAR_MAKE_DIMENSION m ON cs.MAKE = m.MAKE
JOIN CAR_MODEL_DIMENSION mo ON cs.MODEL = mo.MODEL;

CREATE TABLE USED_CAR_PRICES_FACT (
    USED_CAR_ID INT AUTOINCREMENT PRIMARY KEY,
    MAKE_ID INT,
    MODEL_ID INT,
    YEAR INT,
    ENGINE_SIZE DECIMAL(10,2),
    FUEL_TYPE VARCHAR(255),
    TRANSMISSION_ID INT,
    MILEAGE INT,
    DOORS INT,
    OWNER_COUNT INT,
    PRICE DECIMAL(10,2),
    CONSTRAINT FK_CAR_MAKE FOREIGN KEY (MAKE_ID) REFERENCES CAR_MAKE_DIMENSION(MAKE_ID),
    CONSTRAINT FK_CAR_MODEL FOREIGN KEY (MODEL_ID) REFERENCES CAR_MODEL_DIMENSION(MODEL_ID),
    CONSTRAINT FK_TRANSMISSION FOREIGN KEY (TRANSMISSION_ID) REFERENCES TRANSMISSION_DIMENSION(TRANSMISSION_ID)
);

--- Populating data
INSERT INTO USED_CAR_PRICES_FACT (
    MAKE_ID,
    MODEL_ID,
    YEAR,
    ENGINE_SIZE,
    FUEL_TYPE,
    TRANSMISSION_ID,
    MILEAGE,
    DOORS,
    OWNER_COUNT,
    PRICE
)
SELECT 
    m.MAKE_ID,
    mo.MODEL_ID,
    ucp.YEAR,
    ucp.ENGINESIZE,
    ucp.FUELTYPE,
    t.TRANSMISSION_ID,
    ucp.MILEAGE,
    ucp.DOORS,
    ucp.OWNERCOUNT,
    ucp.PRICE
FROM 
    USED_CAR_PRICES ucp
JOIN 
    CAR_MAKE_DIMENSION m ON ucp.MAKE = m.MAKE
JOIN 
    CAR_MODEL_DIMENSION mo ON ucp.MODEL = mo.MODEL
LEFT JOIN 
    TRANSMISSION_DIMENSION t ON ucp.TRANSMISSION = t.TRANSMISSION_TYPE
WHERE 
    ucp.PRICE IS NOT NULL AND TRIM(ucp.PRICE) != '';


SELECT * 
FROM USED_CAR_PRICES_FACT ucpf
JOIN CAR_MAKE_DIMENSION m ON ucpf.MAKE_ID = m.MAKE_ID
JOIN CAR_MODEL_DIMENSION mo ON ucpf.MODEL_ID = mo.MODEL_ID
LIMIT 10;


CREATE TABLE SAFER_CARS_FACT (
    SAFETY_FACT_ID INT AUTOINCREMENT PRIMARY KEY,
    MAKE_ID INT,
    MODEL_ID INT,
    MODEL_YEAR INT,
    BODY_STYLE VARCHAR(255),
    VEHICLE_TYPE VARCHAR(255),
    DRIVE_TRAIN VARCHAR(255),
    PRODUCTION_RELEASE INT,
    VEHICLE_CLASS VARCHAR(255),
    BODY_FRAME VARCHAR(255),
    NUM_OF_SEATING VARCHAR(16777216),
    SAFETY_ID INT,
    CONSTRAINT FK_CAR_MAKE FOREIGN KEY (MAKE_ID) REFERENCES CAR_MAKE_DIMENSION(MAKE_ID),
    CONSTRAINT FK_CAR_MODEL FOREIGN KEY (MODEL_ID) REFERENCES CAR_MODEL_DIMENSION(MODEL_ID),
    CONSTRAINT FK_SAFETY FOREIGN KEY (SAFETY_ID) REFERENCES SAFETY_RATING_DIMENSION(SAFETY_ID)
);

--- Populating data
INSERT INTO SAFER_CARS_FACT (
    MAKE_ID, 
    MODEL_ID, 
    MODEL_YEAR, 
    BODY_STYLE, 
    VEHICLE_TYPE, 
    DRIVE_TRAIN, 
    PRODUCTION_RELEASE, 
    VEHICLE_CLASS, 
    BODY_FRAME, 
    NUM_OF_SEATING, 
    SAFETY_ID
)
SELECT 
    m.MAKE_ID, 
    mo.MODEL_ID, 
    scr.MODELYR AS MODEL_YEAR, 
    scr.BODYSTYLE AS BODY_STYLE, 
    scr.VEHICLETYPE AS VEHICLE_TYPE, 
    scr.DRIVETRAIN AS DRIVE_TRAIN, 
    scr.PRODUCTIONRELEASE, 
    scr.VEHICLECLASS AS VEHICLE_CLASS, 
    scr.BODYFRAME AS BODY_FRAME, 
    scr.NUMOFSEATING, 
    s.SAFETY_ID
FROM SAFER_CARS_RATING scr
JOIN CAR_MAKE_DIMENSION m ON scr.MAKE = m.MAKE
JOIN CAR_MODEL_DIMENSION mo ON scr.MODEL = mo.MODEL
LEFT JOIN SAFETY_RATING_DIMENSION s ON scr.OVERALLSTARS = s.OVERALL_STARS;

CREATE TABLE VEHICLE_SAFETY_FACT (
    SAFETY_FACT_ID NUMBER(38,0) PRIMARY KEY AUTOINCREMENT,
    MAKE_ID NUMBER(38,0),
    MODEL_ID NUMBER(38,0),
    YEAR NUMBER(38,0),
    SAFETY_ID NUMBER(38,0),
    CONSTRAINT FK_SAFETY_FACT_MAKE FOREIGN KEY (MAKE_ID) REFERENCES CAR_MAKE_DIMENSION(MAKE_ID),
    CONSTRAINT FK_SAFETY_FACT_MODEL FOREIGN KEY (MODEL_ID) REFERENCES CAR_MODEL_DIMENSION(MODEL_ID),
    CONSTRAINT FK_SAFETY_FACT_SAFETY FOREIGN KEY (SAFETY_ID) REFERENCES SAFETY_RATING_DIMENSION(SAFETY_ID)
);

--- Populating data
INSERT INTO VEHICLE_SAFETY_FACT (MAKE_ID, MODEL_ID, YEAR, SAFETY_ID)
SELECT 
    CM.MAKE_ID, 
    CMD.MODEL_ID, 
    SCR.MODELYR, 
    SRD.SAFETY_ID
FROM SAFER_CARS_RATING SCR
JOIN CAR_MAKE_DIMENSION CM ON SCR.MAKE = CM.MAKE
JOIN CAR_MODEL_DIMENSION CMD ON SCR.MODEL = CMD.MODEL
JOIN SAFETY_RATING_DIMENSION SRD ON SCR.OVERALLSTARS = SRD.OVERALL_STARS;

-- Modify CAR_MAKE_DIMENSION to add SCD Type 2 tracking columns
ALTER TABLE CAR_MAKE_DIMENSION 
ADD COLUMN Effective_Date DATE DEFAULT NULL;

ALTER TABLE CAR_MAKE_DIMENSION 
ADD COLUMN End_Date DATE DEFAULT NULL;

ALTER TABLE CAR_MAKE_DIMENSION 
ADD COLUMN Is_Current CHAR(1) DEFAULT 'N';

-- Modify CAR_MODEL_DIMENSION to add SCD Type 2 tracking columns
ALTER TABLE CAR_MODEL_DIMENSION 
ADD COLUMN Effective_Date DATE DEFAULT NULL;

ALTER TABLE CAR_MODEL_DIMENSION 
ADD COLUMN End_Date DATE DEFAULT NULL;

ALTER TABLE CAR_MODEL_DIMENSION 
ADD COLUMN Is_Current CHAR(1) DEFAULT 'N';

-- Modify ENGINE_DIMENSION to add SCD Type 2 tracking columns
ALTER TABLE ENGINE_DIMENSION 
ADD COLUMN Effective_Date DATE DEFAULT NULL;

ALTER TABLE ENGINE_DIMENSION 
ADD COLUMN End_Date DATE DEFAULT NULL;

ALTER TABLE ENGINE_DIMENSION 
ADD COLUMN Is_Current CHAR(1) DEFAULT 'N';

-- Modify TRANSMISSION_DIMENSION to add SCD Type 2 tracking columns
ALTER TABLE TRANSMISSION_DIMENSION 
ADD COLUMN Effective_Date DATE DEFAULT NULL;

ALTER TABLE TRANSMISSION_DIMENSION 
ADD COLUMN End_Date DATE DEFAULT NULL;

ALTER TABLE TRANSMISSION_DIMENSION 
ADD COLUMN Is_Current CHAR(1) DEFAULT 'N';

-- Modify VEHICLE_DIMENSION to add SCD Type 2 tracking columns
ALTER TABLE VEHICLE_DIMENSION 
ADD COLUMN Effective_Date DATE DEFAULT NULL;

ALTER TABLE VEHICLE_DIMENSION 
ADD COLUMN End_Date DATE DEFAULT NULL;

ALTER TABLE VEHICLE_DIMENSION 
ADD COLUMN Is_Current CHAR(1) DEFAULT 'N';

-- Modify SAFETY_RATING_DIMENSION to add SCD Type 2 tracking columns
ALTER TABLE SAFETY_RATING_DIMENSION 
ADD COLUMN Effective_Date DATE DEFAULT NULL;

ALTER TABLE SAFETY_RATING_DIMENSION 
ADD COLUMN End_Date DATE DEFAULT NULL;

ALTER TABLE SAFETY_RATING_DIMENSION 
ADD COLUMN Is_Current CHAR(1) DEFAULT 'N';